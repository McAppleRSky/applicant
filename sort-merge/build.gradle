
plugins {
    id 'java'
    // id 'org.springframework.boot' version '2.6.3'
    // id 'io.spring.dependency-management' version '1.0.11.RELEASE'
//    id "jacoco"
}

description = "Applicant sort merge"
group 'ru.mrs'
version '0.0.1-SNAPSHOT'

compileJava   {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

test {
    // never UP-TO-DATE
//  systemProperty "random.testing.seed", new Random().nextInt()
    useJUnitPlatform()
//    finalizedBy jacocoTestReport
}

repositories {
    mavenCentral()
}

/*jacocoTestReport {
    dependsOn test
}*/

ext {
    lombok_version = '1.18.22'
    lang3_version = "3.12.0"
    mockito_version = "4.3.1"
//    log4j_version = "2.17.1"
//    jetty9_version = "9.4.44.v20210927"
//    servlet3_version = "3.1.0"
//    jackson_version = "2.13.1"
//    slf4j_version = "1.7.36"
    junit58_version = "5.8.2"}

dependencies {
    compileOnly 'com.google.code.findbugs:jsr305:3.0.2'
    testImplementation  "org.junit.jupiter:junit-jupiter-api:$junit58_version"
    testRuntimeOnly     "org.junit.jupiter:junit-jupiter-engine:$junit58_version"
    testImplementation "org.mockito:mockito-core:$mockito_version"
    // testImplementation('org.springframework.boot:spring-boot-starter-test') {
        // exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    // }
    compileOnly         "org.projectlombok:lombok:$lombok_version"
    annotationProcessor "org.projectlombok:lombok:$lombok_version"
    implementation "org.apache.commons:commons-lang3:$lang3_version"
    // implementation 'javax.persistence:javax.persistence-api'
    // implementation 'javax.validation:validation-api'
//    implementation 'javax.xml.bind:jaxb-api'
    // implementation 'org.hibernate:hibernate-core'
    // implementation 'com.h2database:h2'
    // implementation 'org.flywaydb:flyway-core'
    // implementation 'org.springframework.boot:spring-boot-starter-web'
    // implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // implementation 'org.springframework.boot:spring-boot-starter-security'
//    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    // implementation 'org.springframework.boot:spring-boot-starter-freemarker'
    // implementation 'io.jsonwebtoken:jjwt:0.9.1'
}


sourceSets {
    main {
        resources {
            exclude '**/*.zip'
        }
    }
}

/*springBoot {
  executable = true
}*/
